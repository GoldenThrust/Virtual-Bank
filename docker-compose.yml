services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
      
  redis:
    image: redis:latest 
    command: redis-server
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: ./Dockerfile
    volumes:
      - ./api:/app/api
      - ./media:/app/media
    ports:
      - "8030:8030"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - REDIS_HOST=redis
      - DJANGO_SETTINGS_MODULE=virtual_bank.settings
    command: python manage.py runserver 0.0.0.0:8030

  client:
    build:
      context: .
      dockerfile: ./Dockerfile.client
    volumes:
      - ./clients:/app/clients
      - ./media:/app/media
    ports:
      - "8040:8040"
    depends_on:
      - api
      - db
      - redis
    env_file:
      - .env
    environment:
      - DB_HOST=db
      - REDIS_HOST=redis
      - DJANGO_SETTINGS_MODULE=virtual_bank.settings
      - API_URL=http://api:8030
    command: python manage.py runserver 0.0.0.0:8040

volumes:
  postgres_data:
